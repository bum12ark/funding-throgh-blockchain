package exe.client;

import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.util.StringTokenizer;

import exe.path.Path;
import exe.util.Protocol;
import exe.util.StringUtil;

public class FileClientThread extends Thread {
	InputStream in = null;
	OutputStream out = null;
	FileInputStream fin = null;
	DataOutputStream dout = null;
	DataInputStream din = null;
	boolean isStop = false;
	FileTransfer fileTransfer = null;
	////
	String msg = null;
	StringTokenizer stz = null;
	int protocol = 0;
	////
//	ObjectInputStream ois = null;
	FileOutputStream fos = null;
	BufferedOutputStream bos = null;

	public FileClientThread(Socket fileSocket) {
		try {
			this.fileTransfer = fileTransfer;
//			out = fileTransfer.dout;
//			dout = fileTransfer.dout;
//			in = fileTransfer.in;
//			din = fileTransfer.din;
			out = fileSocket.getOutputStream();
			dout = new DataOutputStream(out);
			in = fileSocket.getInputStream();
			din = new DataInputStream(in);
//			ois = new ObjectInputStream(in);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void disconnect() {
		try {
			isStop = true;
			if(in != null) in.close();
			System.out.println("파일 클라이언트 스레드 종료!");
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}

	@Override
	public void run() {
		while (!isStop) {
			try {
				msg = din.readUTF();
//				msg = ois.readObject().toString();
				if (msg != null && msg.length() > 0) {
					System.out.println("메세지 : " + msg + "\n");
					stz = new StringTokenizer(msg, "|");
					protocol = Integer.parseInt(stz.nextToken());
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			switch (protocol) {
			case Protocol.CHAIN_SYNC_DOWNLOAD: {
				try {
					String loginID = stz.nextToken();
					System.out.println("CHAIN_SYNC_DOWNLOAD");
					int data = din.readInt();
					System.out.println("1");
					File file = new File(Path.CHAIN_DIRECTORY + loginID + "Chain.ftbc");
					System.out.println("2");
					// * 파일
//					out = new FileOutputStream(file);
					System.out.println("3");
					fos = new FileOutputStream(file);
					bos = new BufferedOutputStream(fos);
					int datas = data;
					System.out.println("4");
					byte[] buffer = new byte[1024];
					System.out.println("5");
					int len;
					System.out.println("6");
					System.out.println("파일클라이언트 사이즈 : "+datas);
					for (; data > 0; data--) {
						System.out.println("7");
						len = in.read(buffer);
						System.out.println("8");
						bos.write(buffer, 0, len);
						System.out.println("9");
					}
					bos.flush();
					if(data == 0) isStop = true;
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
				}
			}
			break;
			}

		}
	}
}